---
import type { HTMLTag, Polymorphic } from 'astro/types'

type Props<Tag extends HTMLTag> = Polymorphic<{
	as: Tag
	class?: string
	type?: 'x' | 'y'
}>

const { as: Tag, class: className, type = 'x' } = Astro.props
const baseClasses = {
	x: 'group w-fit relative grid pb-1 transition-all sm:max-w-[640px] sm:grid-cols-8 sm:gap-8 md:gap-4 lg:hover:!opacity-100 lg:group-hover/item:opacity-50',
	y: 'group w-full relative grid grid-rows-10 py-2 transition-all min-h-[480px] max-h-[480px]'
}

const classes = [[baseClasses[type as keyof typeof baseClasses], className]]
---

<Tag class:list={classes}>
	<div
		class="absolute -inset-x-4 -inset-y-4 z-0 hidden rounded-md transition-all lg:-inset-x-4 lg:block lg:group-hover:bg-bg-card/20 lg:group-hover:shadow-[inset_0_1px_0_0_rgba(14,165,233,0.1)] lg:group-hover:drop-shadow-lg"
	>
	</div>

	<header
		class:list={[
			'z-10 pt-1',
			{ 'sm:col-span-2': type === 'x' },
			{ 'row-span-6 space-y-4': type === 'y' }
		]}
	>
		<slot name="header" />
	</header>

	<div class:list={['z-10', { 'sm:col-span-6': type === 'x' }, { 'row-span-4': type === 'y' }]}>
		<slot />
	</div>
</Tag>
