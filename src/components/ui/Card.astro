---
import type { HTMLTag, Polymorphic } from 'astro/types'

type Props<Tag extends HTMLTag> = Polymorphic<{
  as: Tag
  class?: string
  type?: 'x' | 'y'
}>

const { as: Tag, class: className, type = 'x', ...rest } = Astro.props

const baseClasses =
  'group relative grid transition-all lg:hover:!opacity-100 lg:group-hover/item:opacity-50'

const typeClasses = {
  x: 'w-fit pb-1 sm:grid-cols-8 sm:gap-8 md:gap-4',
  y: 'w-full grid-rows-12 min-h-[520px] max-h-[520px]',
}

const classes = [[typeClasses[type as keyof typeof typeClasses], baseClasses, className]]
---

<Tag class:list={classes} {...rest}>
  <div
    class="absolute -inset-x-4 -inset-y-4 z-0 hidden rounded-md transition-all lg:-inset-x-4 lg:block lg:group-hover:bg-bg-card/20 lg:group-hover:shadow-[inset_0_1px_0_0_rgba(14,165,233,0.1)] lg:group-hover:drop-shadow-lg"
  >
  </div>

  <header
    class:list={[
      'z-10 pb-2.5 text-xs font-semibold uppercase leading-none tracking-wide text-label',
      { 'pt-1.5 sm:col-span-2': type === 'x' },
      { 'row-span-1': type === 'x' },
    ]}
  >
    <slot name="header" />
  </header>

  <div
    class:list={[
      'z-10',
      { 'sm:col-span-6': type === 'x' },
      { 'row-span-11 flex flex-col justify-between gap-2': type === 'y' },
    ]}
  >
    <slot />
  </div>
</Tag>
